{
  "swagger": "2.0",
  "info": {
    "description": "Documentation of the RESTful API that would allow an application to manage users and articles. \n\n# Authentication\n\n This application doesn't follow standard protocols such as Basic Auth or OAuth. \n In order to make authenticated request, you need to add to your request a header: \n <code>{ Authorization: APIKey <token> }</code> \n <em>token</em>: is configurated by the env's server file.",
    "version": "1.0.0",
    "title": "Workast Challenge",
    "contact": {
      "name": "Federico Cano",
      "email": "canofedericomartin@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/canofm/workast-challenge/LICENSE"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v0",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "article",
      "description": "Operations about articles"
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/articles": {
      "post": {
        "tags": ["article"],
        "summary": "Add a new article to an user",
        "description": "",
        "operationId": "addArticle",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Article object to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Property required missing"
          },
          "201": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "get": {
        "tags": ["article"],
        "summary": "Find articles by tags",
        "description": "Muliple tags can be provided with comma separated strings. Also it accepts using the same query param multiple times.",
        "operationId": "findArticlesByTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tagId",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Article"
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/article/{articleId}": {
      "put": {
        "tags": ["article"],
        "summary": "Updates an existing article",
        "description": "",
        "operationId": "updateArticle",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "ID of article that needs to be updated",
            "required": true,
            "type": "string",
            "format": "ObjectId"
          },
          {
            "name": "title",
            "in": "body",
            "description": "Updated title of the article",
            "required": false,
            "type": "string"
          },
          {
            "name": "text",
            "in": "body",
            "description": "Updated text of the article",
            "required": false,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "body",
            "description": "Updated userId of the article",
            "required": false,
            "type": "string",
            "format": "ObjectId"
          },
          {
            "name": "tags",
            "in": "body",
            "description": "Updated tags of the article",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Property required missing"
          },
          "404": {
            "description": "Article not found"
          },
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "delete": {
        "tags": ["article"],
        "summary": "Deletes an article",
        "description": "",
        "operationId": "deleteArticle",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "Article id to delete",
            "required": true,
            "type": "string",
            "format": "ObjectId"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "Article not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "Property required missing"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        },
        "avatar": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Article": {
      "type": "object",
      "required": ["userId", "title", "text", "tags"],
      "properties": {
        "userId": {
          "type": "string",
          "format": "ObjectId",
          "$ref": "#/definitions/User"
        },
        "title": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "Article"
      }
    }
  }
}
